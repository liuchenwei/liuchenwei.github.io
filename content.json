[{"title":"Applet(微信小程序)","date":"2017-01-07T15:05:36.000Z","path":"2017/01/07/Applet/","text":"&#x7B80;&#x4ECB; &#x81EA;&#x6211;&#x4F5C;&#x54C1;&#x63A8;&#x8350;&#x5C0F;&#x7A0B;&#x5E8F;&#x5F00;&#x53D1; &#x548C; Apicloud&#x5F00;&#x53D1;&#x7684;&#x533A;&#x522B;Apicloud &#x654F;&#x6377;&#x5F00;&#x53D1;&#x8FD9;&#x4E00;&#x4E24;&#x5E74;&#x5F00;&#x53D1;&#x4E86;&#x597D;&#x51E0;&#x4E2A;Apicloud&#x7684;&#x9879;&#x76EE;&#xFF0C;&#x4ECE;&#x4E00;&#x5E74;&#x524D;&#xFF0C;&#x53EA;&#x80FD;&#x5C06;Apicloud&#x4E0A;&#x7684;&#x7EC4;&#x4EF6;&#x8FDB;&#x884C;&#x62FC;&#x88C5;&#xFF0C;&#x5230;&#x4E00;&#x5E74;&#x540E;&#xFF0C;&#x6B23;&#x559C;&#x770B;&#x5230;&#xFF0C;&#x7EC4;&#x4EF6;&#x5DF2;&#x7ECF;&#x5F00;&#x6E90;&#xFF0C;&#x80FD;&#x591F;&#x6839;&#x636E;&#x81EA;&#x5DF1;&#x7684;&#x9700;&#x8981;&#x53BB;&#x4FEE;&#x6539;&#x5F00;&#x6E90;&#x7684;&#x7EC4;&#x4EF6;&#x3002;&#x6240;&#x4EE5;&#xFF0C;&#x6211;&#x518D;&#x6B21;&#x5F00;&#x53D1;Apicloud&#x9879;&#x76EE;&#x7684;&#x65F6;&#x5019;&#x5C31;&#x66F4;&#x52A0;&#x5730;&#x5F97;&#x5FC3;&#x5E94;&#x624B;&#x3002;&#x6211;&#x559C;&#x6B22;Apicloud&#x7684;&#x539F;&#x56E0;&#x65E0;&#x5916;&#x4E4E;&#x4E24;&#x70B9;&#xFF1A;A&#xFF1A;&#x7EC4;&#x4EF6;&#x53EF;&#x4EE5;&#x5B9A;&#x5236;&#x5316;&#x5F00;&#x53D1;&#xFF0C;&#x5E76;&#x4E14;&#x60F3;&#x7528;HTML5&#x3001;&#x539F;&#x751F;JS&#x3001;&#x4EE5;&#x53CA;CSS3&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x90FD;&#x53EF;&#x4EE5;&#x5F88;&#x65B9;&#x4FBF;&#x5730;&#x5C06;&#x4EE3;&#x7801;&#x5D4C;&#x8FDB;&#x53BB;&#xFF1B;B&#xFF1A;&#x5728;&#x7F16;&#x8BD1;&#x6210;Ios&#x548C;Android&#x4E24;&#x5957;&#x4EE3;&#x7801;&#x4E2D;&#xFF0C;&#x8FD9;&#x4E9B;&#x5D4C;&#x5165;&#x7684;&#x4EE3;&#x7801;&#x90FD;&#x80FD;&#x591F;&#x88AB;&#x7F16;&#x8BD1;&#x5730;&#x5F88;&#x597D;&#xFF0C;&#xFF08;&#x6027;&#x80FD;&#x5148;&#x4E0D;&#x8BF4;&#xFF0C;&#x56E0;&#x4E3A;&#x6CA1;&#x8DD1;&#x8FC7;&#x592A;&#x591A;&#x7684;&#x7528;&#x6237;&#xFF09;&#x66F4;&#x52A0;&#x6709;&#x610F;&#x601D;&#x7684;&#x662F;&#xFF0C;&#x7B2C;&#x4E00;&#x6B21;&#x5F00;&#x53D1;Apicloud&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x5FC5;&#x987B;&#x7528;USB&#x8FDE;&#x7740;&#x7535;&#x8111;&#x8FDB;&#x884C;&#x53CD;&#x590D;&#x7684;&#x8986;&#x76D6;&#x548C;&#x66F4;&#x65B0;&#xFF0C;&#x4F46;&#x662F;&#x4E00;&#x5E74;&#x540E;&#x5F00;&#x53D1;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x53EA;&#x8981;&#x8FDE;&#x5165;&#x5C40;&#x57DF;&#x7F51;&#xFF0C;&#x5C31;&#x53EF;&#x4EE5;&#x8FDB;&#x884C;&#x4FBF;&#x6377;&#x5730;&#x8FDB;&#x884C;&#x65E0;&#x7EBF;&#x4EE3;&#x7801;&#x7684;&#x8986;&#x76D6;&#x3002;&#x8FD9;&#x4E00;&#x5207;&#xFF0C;&#x90FD;&#x662F;&#x6211;&#x89C9;&#x5F97;&#x6B23;&#x559C;&#x7684;&#x5730;&#x65B9;&#xFF0C;&#x4F46;&#x662F;&#xFF0C;&#x4E0D;&#x5F97;&#x4E0D;&#x8BF4;&#xFF0C;&#x654F;&#x6377;&#x5F00;&#x53D1;&#x7684;&#x95EE;&#x9898;&#x786E;&#x5B9E;&#x89E3;&#x51B3;&#x4E86;&#xFF0C;&#x4F46;&#x662F;&#x8F6F;&#x4EF6;&#x63A8;&#x5E7F;&#x548C;&#x5165;&#x53E3;&#x7684;&#x95EE;&#x9898;&#x5374;&#x5F97;&#x9760;&#x81EA;&#x5DF1;&#x6765;&#x505A;&#xFF0C;&#x6BCF;&#x6B21;&#x4EE3;&#x7801;&#x7F16;&#x8BD1;&#x5B8C;&#x4E86;&#x540E;&#x7684;&#x7A0B;&#x5E8F;&#x5F97;&#x653E;&#x5728;&#x5E94;&#x7528;&#x5546;&#x573A;&#x4E2D;&#x8FDB;&#x884C;&#x63A8;&#x5E7F;&#xFF0C;&#x5728;&#x63A8;&#x5E7F;&#x80FD;&#x529B;&#x4E0D;&#x8DB3;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x5C31;&#x5F88;&#x5BB9;&#x6613;&#x6B7B;&#x6389;&#x3002; &#x5C0F;&#x7A0B;&#x5E8F; &#x7EC4;&#x4EF6;&#x5F00;&#x53D1;&#x5728;&#x6211;&#x773C;&#x91CC;&#x7684;&#x5C0F;&#x7A0B;&#x5E8F;&#xFF0C;&#x5C31;&#x73B0;&#x5728;&#x6765;&#x770B;&#xFF0C;&#x5C31;&#x5F88;&#x50CF;&#x7B2C;&#x4E00;&#x4E2A;&#x7248;&#x672C;&#x7684;Apicloud&#xFF0C;&#x662F;&#x5F88;&#x7B80;&#x5355;&#x7684;&#x7EC4;&#x4EF6;&#xFF08;View&#x7EC4;&#x4EF6;&#x548C;&#x901A;&#x8BAF;&#x7EC4;&#x4EF6;&#xFF09;&#x5806;&#x780C;&#xFF0C;&#x501F;&#x7528;&#x5FAE;&#x4FE1;&#x6210;&#x719F;&#x7684;UI&#x6846;&#x67B6;&#x53EA;&#x9700;&#x8981;&#x5C06;&#x5F00;&#x53D1;&#x7684;&#x7EC4;&#x4EF6;&#x642D;&#x5EFA;&#x597D;&#xFF0C;&#x5F88;&#x5BB9;&#x6613;&#x5C31;&#x80FD;&#x505A;&#x51FA;&#x4E00;&#x6B3E;&#x8BBE;&#x8BA1;&#x98CE;&#x683C;&#x7B80;&#x7EA6;&#x7684;&#x5C0F;&#x7A0B;&#x5E8F;&#x3002;&#x5C0F;&#x7A0B;&#x5E8F;&#x5F88;&#x5C0F;&#xFF0C;&#x5C0F;&#x5230;&#x53EA;&#x80FD;&#x505A;&#x4E00;&#x4EF6;&#x4E8B;&#xFF0C;&#x6BD4;&#x5982;&#xFF1A;&#x8F6C;&#x8D26;&#x4E8C;&#x7EF4;&#x7801;(&#x5FAE;&#x7B11;&#x8138;)&#x8FD9;&#x4E2A;&#x65F6;&#x5019;&#xFF0C;&#x5F00;&#x53D1;&#x8005;&#x9700;&#x8981;&#x5173;&#x5FC3;&#x7684;&#x4E1A;&#x52A1;&#x903B;&#x8F91;&#x5C31;&#x66F4;&#x52A0;&#x7B80;&#x5355;&#x4E86;&#xFF0C;&#x6BD4;&#x5982;&#xFF0C;&#x7B7E;&#x5230;&#x8FD9;&#x4E2A;&#x57FA;&#x672C;&#x7684;&#x4E1A;&#x52A1;&#xFF0C;&#x5982;&#x679C;&#x8FD9;&#x4E2A;&#x5C0F;&#x7A0B;&#x5E8F;&#x80FD;&#x83B7;&#x5F97;&#x5FAE;&#x4FE1;&#x7FA4;&#x4E2D;&#x6240;&#x6709;&#x4EBA;&#x7684;&#x8EAB;&#x4EFD;&#x4FE1;&#x606F;&#x548C;&#x67D0;&#x4E00;&#x65F6;&#x95F4;&#x70B9;&#x7684;&#x7FA4;&#x6210;&#x5458;&#x7684;&#x5730;&#x7406;&#x4F4D;&#x7F6E;&#xFF0C;&#x90A3;&#x4E48;&#x8FD9;&#x4E2A;&#x4E1A;&#x52A1;&#x5C31;&#x53EF;&#x4EE5;&#x5B9E;&#x73B0;&#x4E86;&#x3002;&#x7B7E;&#x5230;&#x53D1;&#x8D77;&#x8005;&#xFF08;&#x7B7E;&#x5230;&#x5C0F;&#x7A0B;&#x5E8F;&#x4F7F;&#x7528;&#x8005;&#xFF09;&#x5C31;&#x53EF;&#x4EE5;&#x4EE5;&#x4ED6;&#x7684;&#x5730;&#x7406;&#x4F4D;&#x7F6E;&#x4E3A;&#x4E2D;&#x5FC3;&#xFF0C;&#x5728;&#x8BBE;&#x5B9A;&#x56FA;&#x5B9A;&#x7684;&#x534A;&#x5F84;&#x8DDD;&#x79BB;&#x540E;&#xFF0C;&#x5BF9;&#x7FA4;&#x4E2D;&#x5904;&#x4E8E;&#x8BE5;&#x8DDD;&#x79BB;&#x8303;&#x56F4;&#x5185;&#x7684;&#x4EBA;&#x5B8C;&#x6210;&#x7B7E;&#x5230;&#xFF0C;&#x5E76;&#x5728;&#x6307;&#x5B9A;&#x7684;&#x65F6;&#x95F4;&#x5185;&#xFF08;&#x6BD4;&#x5982;1min)&#xFF0C;&#x8FDB;&#x884C;&#x53CD;&#x590D;&#x76D1;&#x6D4B;&#xFF0C;&#x4E00;&#x5206;&#x949F;&#x540E;&#xFF0C;&#x7528;HTML5&#x7684;&#x5F62;&#x5F0F;&#x5C06;&#x7B7E;&#x5230;&#x7ED3;&#x679C;&#x63A8;&#x9001;&#x5230;&#x53D1;&#x8D77;&#x8005;&#x7684;&#x5FAE;&#x4FE1;&#x4E2D;&#x3002;&#x5373;&#x5B8C;&#x6210;&#x4E86;&#x5B83;&#x7684;&#x4F7F;&#x547D;&#xFF0C;&#x7528;&#x5B8C;&#x5373;&#x8D70;&#xFF0C;&#x4E0B;&#x56DE;&#x518D;&#x7528;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x76F4;&#x63A5;&#x6253;&#x5F00;&#x5C31;&#x884C;&#x3002;&#x5C0F;&#x7A0B;&#x5E8F;&#x4EE5;&#x4E8C;&#x7EF4;&#x7801;&#x4E3A;&#x4F7F;&#x7528;&#x7684;&#x5165;&#x53E3;&#xFF0C;&#x8FD9;&#x79CD;&#x201C;&#x5361;&#x724C;&#x5316;&#x201D;&#x7684;&#x4F7F;&#x7528;&#x65B9;&#x5F0F;&#xFF0C;&#x66F4;&#x52A0;&#x4F7F;&#x5F97;90&#x540E;&#x7528;&#x6237;&#x80FD;&#x591F;&#x4E60;&#x60EF;&#x8FD9;&#x79CD;&#x4F7F;&#x7528;&#x65B9;&#x6CD5;&#x3002;&#x6211;&#x4EEC;&#x90FD;&#x73A9;&#x8FC7;&#x5361;&#x724C;&#xFF08;&#x81F3;&#x5C11;&#x73A9;&#x8FC7;&#x4E09;&#x56FD;&#x6740;&#xFF09;&#x7136;&#x540E;&#x4E00;&#x4E2A;&#x4E8C;&#x7EF4;&#x7801;&#x5C31;&#x76F8;&#x5F53;&#x4E8E;&#x4E00;&#x5F20;&#x5E26;&#x6709;&#x529F;&#x80FD;&#x7684;&#x5361;&#x724C;&#xFF0C;&#x800C;&#x4E14;&#x662F;&#x65E0;&#x9650;&#x6B21;&#x6570;&#x4F7F;&#x7528;&#x7684;&#xFF0C;&#x4EE5;&#x8FD9;&#x79CD;&#x65B9;&#x5F0F;&#x8BA9;&#x5C0F;&#x7A0B;&#x5E8F;&#x6E38;&#x8D70;&#x5728;&#x5FAE;&#x4FE1;&#x7684;&#x751F;&#x6001;&#x7CFB;&#x7EDF;&#x4E2D;&#xFF0C;&#x8FD9;&#x662F;Apicloud&#x4E0D;&#x53EF;&#x590D;&#x5236;&#x7684;&#x5730;&#x65B9;&#x3002; &#x5C0F;&#x7A0B;&#x5E8F;&#x9002;&#x5408;&#x5F00;&#x53D1;&#x54EA;&#x7C7B;&#x7684;&#x7A0B;&#x5E8F;&#x5C0F;&#x7A0B;&#x5E8F;&#x7684;&#x57FA;&#x672C;&#x7ED3;&#x6784;&#x5C0F;&#x7A0B;&#x5E8F;&#x4EE3;&#x7801;&#x7684;&#x89E3;&#x6790;","categories":[],"tags":[{"name":"敏捷开发","slug":"敏捷开发","permalink":"http://yoursite.com/tags/敏捷开发/"}]},{"title":"Excel VBA Google Map Data","date":"2017-01-07T14:31:56.000Z","path":"2017/01/07/Data/","text":"&#x901A;&#x8FC7; Excel VBA&#xFF08;&#x5B8F;&#xFF09;&#x6765;&#x83B7;&#x53D6;Google map API &#x7684;&#x6570;&#x636E; &#x5E94;&#x7528;&#x6848;&#x4F8B;&#xFF1A; &#x7ED9;&#x4E88;&#x8D77;&#x70B9;&#x56FD;&#x5BB6;&#xFF08;&#x4F8B;&#x5982;&#xFF1A;New York City,NY) &#x548C;&#x76EE;&#x7684;&#x5730;&#x56FD;&#x5BB6;&#xFF08;&#x4F8B;&#x5982;&#xFF1A;Chicago,IL) &#x7B97;&#x51FA;&#x4E24;&#x70B9;&#x4E4B;&#x95F4;&#x4EE5;car&#x4E3A;&#x4EA4;&#x901A;&#x5DE5;&#x5177;&#x7684;&#x65F6;&#x95F4;(time)&#x548C;&#x8DDD;&#x79BB;(distance) &#x7ED9;&#x4E88;&#x4E00;&#x4E2A;&#x56FD;&#x5BB6;&#xFF0C;&#x8FD4;&#x56DE;&#x8BE5;&#x56FD;&#x5BB6;&#x7684;&#x5730;&#x7406;&#x4F4D;&#x7F6E;&#xFF08;&#x7ECF;&#x5EA6;&#x548C;&#x7EAC;&#x5EA6;&#xFF09; Google API to get distance &amp; duration time1https://maps.googleapis.com/maps/api/distancematrix/json?origins=Vancouver+BC|Seattle&amp;destinations=San+Francisco|Victoria+BC&amp;mode=bicycling&amp;language=en Google API to get latitude &amp;longitude1http://maps.google.cn/maps/api/geocode/json?address=&#x5730;&#x5740; &#x6548;&#x679C;&#x5C55;&#x793A;&#xFF1A; &#x4EE3;&#x7801;1&#xFF1A;&#x83B7;&#x5F97;&#x56FD;&#x5BB6;&#x4E4B;&#x95F4;&#x7684;&#x5730;&#x7406;&#x4F4D;&#x7F6E;&#x8DDD;&#x79BB;&#xFF08;by car) 123456789101112131415161718Public Function distanceDataFun(start As String, dest As String) Dim firstVal As String, secondVal As String, lastVal As String firstVal = &quot;http://maps.googleapis.com/maps/api/distancematrix/json?origins=&quot; secondVal = &quot;&amp;destinations=&quot; lastVal = &quot;&amp;mode=car&amp;language=pl&amp;sensor=false&quot; Set objHTTP = CreateObject(&quot;Msxml2.XMLHTTP.3.0&quot;) URL = firstVal &amp; Replace(start, &quot; &quot;, &quot;+&quot;) &amp; secondVal &amp; Replace(dest, &quot; &quot;, &quot;+&quot;) &amp; lastVal objHTTP.Open &quot;GET&quot;, URL, False objHTTP.setRequestHeader &quot;User-Agent&quot;, &quot;Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.0)&quot; objHTTP.send (&quot;&quot;) If InStr(objHTTP.responseText, &quot;&quot;&quot;distance&quot;&quot; : {&quot;) = 0 Then GoTo ErrorHandl Set regex = CreateObject(&quot;VBScript.RegExp&quot;): regex.Pattern = &quot;distance(?:.|\\n)*?&quot;&quot;value&quot;&quot;.*?([0-9]+)&quot;: regex.Global = True Set matches = regex.Execute(objHTTP.responseText) distanceDataFun = Format(matches(0).SubMatches(0) / 1000) + &quot; km&quot; Exit FunctionErrorHandl: distanceDataFun = -1End Function &#x4EE3;&#x7801;2&#xFF1A;&#x83B7;&#x5F97;&#x56FD;&#x5BB6;&#x4E4B;&#x95F4;&#x7684;&#x65F6;&#x95F4;&#x6BB5; 123456789101112131415161718192021222324252627Public Function durationDataFun(start As String, dest As String) Dim firstVal As String, secondVal As String, lastVal As String firstVal = &quot;http://maps.googleapis.com/maps/api/distancematrix/json?origins=&quot; secondVal = &quot;&amp;destinations=&quot; lastVal = &quot;&amp;mode=car&amp;language=pl&amp;sensor=false&quot; Set objHTTP = CreateObject(&quot;Msxml2.XMLHTTP.3.0&quot;) URL = firstVal &amp; Replace(start, &quot; &quot;, &quot;+&quot;) &amp; secondVal &amp; Replace(dest, &quot; &quot;, &quot;+&quot;) &amp; lastVal objHTTP.Open &quot;GET&quot;, URL, False objHTTP.setRequestHeader &quot;User-Agent&quot;, &quot;Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.0)&quot; objHTTP.send (&quot;&quot;) If InStr(objHTTP.responseText, &quot;&quot;&quot;duration&quot;&quot; : {&quot;) = 0 Then GoTo ErrorHandl Set regex = CreateObject(&quot;VBScript.RegExp&quot;): regex.Pattern = &quot;duration(?:.|\\n)*?&quot;&quot;value&quot;&quot;.*?([0-9]+)&quot;: regex.Global = True Set matches = regex.Execute(objHTTP.responseText) Dim result As String result = &quot;&quot; If VBA.Int(matches(0).SubMatches(0) / 60 / 60 / 24) &gt; 0 Then result = result + Format(matches(0).SubMatches(0) / 60 / 60, &quot;.00&quot;) + &quot; hour &quot; &apos;result = result + Format(VBA.Int(matches(0).SubMatches(0) / 60 / 60 / 24)) + &quot; day &quot; + Format(Int(matches(0).SubMatches(0) / 60 / 60) Mod 24) + &quot; hour &quot; + Format(Int(matches(0).SubMatches(0) / 60) Mod 60) + &quot; min&quot; Else &apos;result = result + Format(Int(matches(0).SubMatches(0) / 60 / 60) Mod 24) + &quot; hour &quot; + Format((matches(0).SubMatches(0) / 60) Mod 60) + &quot; min&quot; result = result + Format(matches(0).SubMatches(0) / 60 / 60, &quot;.00&quot;) + &quot; hour &quot; End If durationDataFun = result Exit FunctionErrorHandl: durationDataFun = -1End Function &#x4EE3;&#x7801;3&#xFF1A;&#x83B7;&#x5F97;&#x56FD;&#x5BB6;&#x7684;&#x5750;&#x6807; 12345678910111213141516171819202122232425262728293031323334Public Function latDataFun(val As String) Set objHTTP = CreateObject(&quot;Msxml2.XMLHTTP.3.0&quot;) URL = &quot;http://maps.google.cn/maps/api/geocode/json?&amp;address=&quot; + val objHTTP.Open &quot;GET&quot;, URL, False objHTTP.setRequestHeader &quot;User-Agent&quot;, &quot;Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.0)&quot; objHTTP.send (&quot;&quot;) If InStr(objHTTP.responseText, &quot;&quot;&quot;location&quot;&quot; : {&quot;) = 0 Then GoTo ErrorHandl Set regex = CreateObject(&quot;VBScript.RegExp&quot;): regex.Pattern = &quot;location(?:.|\\n)*?&quot;&quot;lat&quot;&quot;.*?([0-9])+\\.([0-9]+)&quot;: regex.Global = True Set matches = regex.Execute(objHTTP.responseText) regex.Pattern = &quot;([0-9])+\\.([0-9]+)&quot;: Set Results = regex.Execute(matches(0)) latDataFun = Results(0) Exit FunctionErrorHandl: latDataFun = -1End FunctionPublic Function lngDataFun(val As String) Set objHTTP = CreateObject(&quot;Msxml2.XMLHTTP.3.0&quot;) URL = &quot;http://maps.google.cn/maps/api/geocode/json?&amp;address=&quot; + val objHTTP.Open &quot;GET&quot;, URL, False objHTTP.setRequestHeader &quot;User-Agent&quot;, &quot;Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.0)&quot; objHTTP.send (&quot;&quot;) If InStr(objHTTP.responseText, &quot;&quot;&quot;location&quot;&quot; : {&quot;) = 0 Then GoTo ErrorHandl Set regex = CreateObject(&quot;VBScript.RegExp&quot;): regex.Pattern = &quot;location(?:.|\\n)*?&quot;&quot;lng&quot;&quot;.*?([0-9])+\\.([0-9]+)&quot;: regex.Global = True Set matches = regex.Execute(objHTTP.responseText) regex.Pattern = &quot;lng.*?([0-9])+\\.([0-9]+)&quot;: Set matches2 = regex.Execute(matches(0)) regex.Pattern = &quot;.?([0-9])+\\.([0-9]+)&quot;: Set result = regex.Execute(matches2(0)) lngDataFun = result(0) Exit FunctionErrorHandl: lngDataFun = -1End Function Github :[https://github.com/liuchenwei/Google_Map_Data]","categories":[{"name":"data","slug":"data","permalink":"http://yoursite.com/categories/data/"}],"tags":[{"name":"数据获取","slug":"数据获取","permalink":"http://yoursite.com/tags/数据获取/"}]}]