[{"title":"Excel VBA Google Map Data","date":"2017-01-07T14:31:56.000Z","path":"2017/01/07/Data/","text":"&#x901A;&#x8FC7; Excel VBA&#xFF08;&#x5B8F;&#xFF09;&#x6765;&#x83B7;&#x53D6;Google map API &#x7684;&#x6570;&#x636E; &#x5E94;&#x7528;&#x6848;&#x4F8B;&#xFF1A; &#x7ED9;&#x4E88;&#x8D77;&#x70B9;&#x56FD;&#x5BB6;&#xFF08;&#x4F8B;&#x5982;&#xFF1A;New York City,NY) &#x548C;&#x76EE;&#x7684;&#x5730;&#x56FD;&#x5BB6;&#xFF08;&#x4F8B;&#x5982;&#xFF1A;Chicago,IL) &#x7B97;&#x51FA;&#x4E24;&#x70B9;&#x4E4B;&#x95F4;&#x4EE5;car&#x4E3A;&#x4EA4;&#x901A;&#x5DE5;&#x5177;&#x7684;&#x65F6;&#x95F4;(time)&#x548C;&#x8DDD;&#x79BB;(distance) &#x7ED9;&#x4E88;&#x4E00;&#x4E2A;&#x56FD;&#x5BB6;&#xFF0C;&#x8FD4;&#x56DE;&#x8BE5;&#x56FD;&#x5BB6;&#x7684;&#x5730;&#x7406;&#x4F4D;&#x7F6E;&#xFF08;&#x7ECF;&#x5EA6;&#x548C;&#x7EAC;&#x5EA6;&#xFF09; Google API to get distance &amp; duration time1https://maps.googleapis.com/maps/api/distancematrix/json?origins=Vancouver+BC|Seattle&amp;destinations=San+Francisco|Victoria+BC&amp;mode=bicycling&amp;language=en Google API to get latitude &amp;longitude1http://maps.google.cn/maps/api/geocode/json?address=&#x5730;&#x5740; &#x6548;&#x679C;&#x5C55;&#x793A;&#xFF1A; &#x4EE3;&#x7801;1&#xFF1A;&#x83B7;&#x5F97;&#x56FD;&#x5BB6;&#x4E4B;&#x95F4;&#x7684;&#x5730;&#x7406;&#x4F4D;&#x7F6E;&#x8DDD;&#x79BB;&#xFF08;by car) 123456789101112131415161718Public Function distanceDataFun(start As String, dest As String) Dim firstVal As String, secondVal As String, lastVal As String firstVal = &quot;http://maps.googleapis.com/maps/api/distancematrix/json?origins=&quot; secondVal = &quot;&amp;destinations=&quot; lastVal = &quot;&amp;mode=car&amp;language=pl&amp;sensor=false&quot; Set objHTTP = CreateObject(&quot;Msxml2.XMLHTTP.3.0&quot;) URL = firstVal &amp; Replace(start, &quot; &quot;, &quot;+&quot;) &amp; secondVal &amp; Replace(dest, &quot; &quot;, &quot;+&quot;) &amp; lastVal objHTTP.Open &quot;GET&quot;, URL, False objHTTP.setRequestHeader &quot;User-Agent&quot;, &quot;Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.0)&quot; objHTTP.send (&quot;&quot;) If InStr(objHTTP.responseText, &quot;&quot;&quot;distance&quot;&quot; : {&quot;) = 0 Then GoTo ErrorHandl Set regex = CreateObject(&quot;VBScript.RegExp&quot;): regex.Pattern = &quot;distance(?:.|\\n)*?&quot;&quot;value&quot;&quot;.*?([0-9]+)&quot;: regex.Global = True Set matches = regex.Execute(objHTTP.responseText) distanceDataFun = Format(matches(0).SubMatches(0) / 1000) + &quot; km&quot; Exit FunctionErrorHandl: distanceDataFun = -1End Function &#x4EE3;&#x7801;2&#xFF1A;&#x83B7;&#x5F97;&#x56FD;&#x5BB6;&#x4E4B;&#x95F4;&#x7684;&#x65F6;&#x95F4;&#x6BB5; 123456789101112131415161718192021222324252627Public Function durationDataFun(start As String, dest As String) Dim firstVal As String, secondVal As String, lastVal As String firstVal = &quot;http://maps.googleapis.com/maps/api/distancematrix/json?origins=&quot; secondVal = &quot;&amp;destinations=&quot; lastVal = &quot;&amp;mode=car&amp;language=pl&amp;sensor=false&quot; Set objHTTP = CreateObject(&quot;Msxml2.XMLHTTP.3.0&quot;) URL = firstVal &amp; Replace(start, &quot; &quot;, &quot;+&quot;) &amp; secondVal &amp; Replace(dest, &quot; &quot;, &quot;+&quot;) &amp; lastVal objHTTP.Open &quot;GET&quot;, URL, False objHTTP.setRequestHeader &quot;User-Agent&quot;, &quot;Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.0)&quot; objHTTP.send (&quot;&quot;) If InStr(objHTTP.responseText, &quot;&quot;&quot;duration&quot;&quot; : {&quot;) = 0 Then GoTo ErrorHandl Set regex = CreateObject(&quot;VBScript.RegExp&quot;): regex.Pattern = &quot;duration(?:.|\\n)*?&quot;&quot;value&quot;&quot;.*?([0-9]+)&quot;: regex.Global = True Set matches = regex.Execute(objHTTP.responseText) Dim result As String result = &quot;&quot; If VBA.Int(matches(0).SubMatches(0) / 60 / 60 / 24) &gt; 0 Then result = result + Format(matches(0).SubMatches(0) / 60 / 60, &quot;.00&quot;) + &quot; hour &quot; &apos;result = result + Format(VBA.Int(matches(0).SubMatches(0) / 60 / 60 / 24)) + &quot; day &quot; + Format(Int(matches(0).SubMatches(0) / 60 / 60) Mod 24) + &quot; hour &quot; + Format(Int(matches(0).SubMatches(0) / 60) Mod 60) + &quot; min&quot; Else &apos;result = result + Format(Int(matches(0).SubMatches(0) / 60 / 60) Mod 24) + &quot; hour &quot; + Format((matches(0).SubMatches(0) / 60) Mod 60) + &quot; min&quot; result = result + Format(matches(0).SubMatches(0) / 60 / 60, &quot;.00&quot;) + &quot; hour &quot; End If durationDataFun = result Exit FunctionErrorHandl: durationDataFun = -1End Function &#x4EE3;&#x7801;3&#xFF1A;&#x83B7;&#x5F97;&#x56FD;&#x5BB6;&#x7684;&#x5750;&#x6807; 12345678910111213141516171819202122232425262728293031323334Public Function latDataFun(val As String) Set objHTTP = CreateObject(&quot;Msxml2.XMLHTTP.3.0&quot;) URL = &quot;http://maps.google.cn/maps/api/geocode/json?&amp;address=&quot; + val objHTTP.Open &quot;GET&quot;, URL, False objHTTP.setRequestHeader &quot;User-Agent&quot;, &quot;Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.0)&quot; objHTTP.send (&quot;&quot;) If InStr(objHTTP.responseText, &quot;&quot;&quot;location&quot;&quot; : {&quot;) = 0 Then GoTo ErrorHandl Set regex = CreateObject(&quot;VBScript.RegExp&quot;): regex.Pattern = &quot;location(?:.|\\n)*?&quot;&quot;lat&quot;&quot;.*?([0-9])+\\.([0-9]+)&quot;: regex.Global = True Set matches = regex.Execute(objHTTP.responseText) regex.Pattern = &quot;([0-9])+\\.([0-9]+)&quot;: Set Results = regex.Execute(matches(0)) latDataFun = Results(0) Exit FunctionErrorHandl: latDataFun = -1End FunctionPublic Function lngDataFun(val As String) Set objHTTP = CreateObject(&quot;Msxml2.XMLHTTP.3.0&quot;) URL = &quot;http://maps.google.cn/maps/api/geocode/json?&amp;address=&quot; + val objHTTP.Open &quot;GET&quot;, URL, False objHTTP.setRequestHeader &quot;User-Agent&quot;, &quot;Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.0)&quot; objHTTP.send (&quot;&quot;) If InStr(objHTTP.responseText, &quot;&quot;&quot;location&quot;&quot; : {&quot;) = 0 Then GoTo ErrorHandl Set regex = CreateObject(&quot;VBScript.RegExp&quot;): regex.Pattern = &quot;location(?:.|\\n)*?&quot;&quot;lng&quot;&quot;.*?([0-9])+\\.([0-9]+)&quot;: regex.Global = True Set matches = regex.Execute(objHTTP.responseText) regex.Pattern = &quot;lng.*?([0-9])+\\.([0-9]+)&quot;: Set matches2 = regex.Execute(matches(0)) regex.Pattern = &quot;.?([0-9])+\\.([0-9]+)&quot;: Set result = regex.Execute(matches2(0)) lngDataFun = result(0) Exit FunctionErrorHandl: lngDataFun = -1End Function Github :[https://github.com/liuchenwei/Google_Map_Data]","categories":[{"name":"data","slug":"data","permalink":"http://yoursite.com/categories/data/"}],"tags":[{"name":"数据获取","slug":"数据获取","permalink":"http://yoursite.com/tags/数据获取/"}]},{"title":"微信小程序","date":"2017-01-07T08:03:40.000Z","path":"2017/01/07/小程序/","text":"&#x7B80;&#x4ECB; &#x81EA;&#x6211;&#x4F5C;&#x54C1;&#x63A8;&#x8350;&#x5C0F;&#x7A0B;&#x5E8F;&#x5F00;&#x53D1; &#x548C; APICLOUD&#x5F00;&#x53D1;&#x7684;&#x533A;&#x522B;&#x5C0F;&#x7A0B;&#x5E8F;&#x9002;&#x5408;&#x5F00;&#x53D1;&#x54EA;&#x7C7B;&#x7684;&#x7A0B;&#x5E8F;&#x5C0F;&#x7A0B;&#x5E8F;&#x7684;&#x57FA;&#x672C;&#x7ED3;&#x6784;&#x5C0F;&#x7A0B;&#x5E8F;&#x4EE3;&#x7801;&#x7684;&#x89E3;&#x6790;","categories":[],"tags":[{"name":"敏捷开发","slug":"敏捷开发","permalink":"http://yoursite.com/tags/敏捷开发/"}]}]